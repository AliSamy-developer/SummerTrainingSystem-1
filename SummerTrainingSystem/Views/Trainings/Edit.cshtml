@model SaveTrainingVM
@inject SummerTrainingSystemCore.Interfaces.IGenericRepository<Department> depRepo
@inject SummerTrainingSystemCore.Interfaces.IGenericRepository<TrainingType> typesRepo
@{
    ViewData["Title"] = Model.Title;
}

<div class="container mt-5">
    <div class="row">
        <div class="col-lg-8 col">
                <h1 class="display-5">Edit Training</h1>
                <hr />
            <form method="post">
                <input asp-for="Id" type="hidden" />
                <input asp-for="CompanyId" type="hidden" />

                <div class="mt-4">
                    <input asp-for="Title" class="form-control" placeholder="Title" />
                    <span asp-validation-for="Title" style="color: #ff008d;"></span>
                </div>

                <div class="mt-4">
                    <textarea asp-for="Description" class="form-control" placeholder="Description"></textarea>
                    <span asp-validation-for="Description" style="color: #ff008d;"></span>
                </div>

                <div class="row">
                    <div class="col-md-6 mt-3">
                        <label asp-for="StartAt"></label>
                        <input asp-for="StartAt" class="form-control"/>
                        <span asp-validation-for="StartAt" style="color: #ff008d;"></span>
                    </div>
                    <div class="col-md-6 mt-3">
                        <label asp-for="EndAt"></label>
                        <input asp-for="EndAt" class="form-control"/>
                        <span asp-validation-for="EndAt" style="color: #ff008d;"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mt-4">
                        <select asp-for="DepartmentId" class="form-select" 
                                asp-items="@(
                                    depRepo.ListAllAsync().Result
                                    .Select(l => new SelectListItem() {Text = l.Abbreviation, Value = l.Id.ToString() })
                                )">
                            <option value="">Department</option>
                        </select>
                        <span class="text-danger" asp-validation-for="DepartmentId"></span>
                    </div>
                    <div class="col-md-6 mt-4">
                        <select asp-for="TrainingTypeId" class="form-select" 
                                asp-items="@(
                                    typesRepo.ListAllAsync().Result
                                    .Select(l => new SelectListItem() {Text = l.TypeName, Value = l.Id.ToString() })
                                )">
                            <option value="">Training Type</option>
                        </select>
                        <span class="text-danger" asp-validation-for="TrainingTypeId"></span>
                    </div>
                </div>
                <div class="mt-4 d-flex justify-content-between">
                    <button type="submit" class="btn btn-success">Save</button>
                    <a asp-controller="Trainings" asp-action="Index" class="btn btn-outline-dark">Back</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
