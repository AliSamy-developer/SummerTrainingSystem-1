@model SaveTrainingVM
@inject SummerTrainingSystemCore.Interfaces.IUnitOfWork unitOfWork
@{
    ViewData["Title"] = "New Training";
}

<div class="container my-5">
    <div class="row">
        <div class="col-lg-8">
            <h1 class="display-5">Add New Training</h1>
            <hr />
            <form method="post">
                
                <div class="row">
                    <div class="col-md-6 mt-4">
                        <label asp-for="Title"></label>
                        <input asp-for="Title" class="form-control" />
                        <span class="text-danger" asp-validation-for="Title"></span>
                    </div>
                    <div class="col-md-6 mt-4">
                        <label asp-for="OpenPositions"></label>
                        <input asp-for="OpenPositions" class="form-control"/>
                        <span class="text-danger" asp-validation-for="OpenPositions"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mt-4">
                        <label asp-for="StartAt"></label>
                        <input asp-for="StartAt" class="form-control"/>
                        <span class="text-danger" asp-validation-for="StartAt"></span>
                    </div>
                    <div class="col-md-6 mt-4">
                        <label asp-for="EndAt"></label>
                        <input asp-for="EndAt" class="form-control"/>
                        <span class="text-danger" asp-validation-for="EndAt"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mt-4">
                        <select asp-for="DepartmentId" class="form-select" 
                                asp-items="@(
                                    unitOfWork.GenericRepository<Department>().ListAllAsync().Result
                                    .Select(l => new SelectListItem() {Text = l.Abbreviation, Value = l.Id.ToString() })
                                )">
                            <option value="">Department</option>
                        </select>
                        <span class="text-danger" asp-validation-for="DepartmentId"></span>
                    </div>
                    <div class="col-md-6 mt-4">
                        <select asp-for="TrainingTypeId" class="form-select" 
                                asp-items="@(
                                    unitOfWork.GenericRepository<TrainingType>().ListAllAsync().Result
                                    .Select(l => new SelectListItem() {Text = l.TypeName, Value = l.Id.ToString() })
                                )">
                            <option value="">Training Type</option>
                        </select>
                        <span class="text-danger" asp-validation-for="TrainingTypeId"></span>
                    </div>
                </div>

                <div class="mt-4">
                    <label asp-for="Description"></label>
                    <textarea spellcheck="true" asp-for="Description" class="form-control"></textarea>
                    <span class="text-danger" asp-validation-for="Description"></span>
                </div>

                <div class="mt-4 d-flex justify-content-between">
                    <button type="submit" class="btn btn-success">Save</button>
                    <a asp-controller="Trainings" asp-action="Index" class="btn btn-dark">Back</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
